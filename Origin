import edu.princeton.cs.introcs.StdDraw;
import java.awt.Color;

public class Point2D implements Comparable<Point2D> {

    private double x, y;

    public Point2D(double x, double y) {
        this.x = x;
        this.y = y;
    }
    public double X() {
        return x;
    }
    public double Y() {
        return y;
    }
    public void moveBy(double xInc, double yInc) {
        x += xInc;
        y += yInc;
    }
    void draw(Color color, double penSize) {
        StdDraw.setPenColor(color);
        StdDraw.setPenRadius(penSize);
        StdDraw.point(x, y);
    }
    @Override
    public int compareTo(Point2D other_point) {
    double first_point = Math.sqrt(Math.pow(x - 0.5, 2) + Math.pow(y - 0.5, 2));
    double second_point = Math.sqrt(Math.pow(other_point.x - 0.5, 2) + Math.pow(other_point.y - 0.5, 2));
    if (first_point < second_point) {
    return -1; 
    }
    else if (first_point > second_point) {
    return 1; 	
    }
    else return 0; 
    }
    @Override
    public String toString() {
        return "(" + x + "," + y + ")";
    }
    public static void main(String args[]) {
    	Point2D p1 = new Point2D(0.0, 0.0);
		Point2D p2 = new Point2D(1.0, 1.0);
		if (p1.compareTo(p2) == 0)
			System.out.println("(1) The points are the same distance from (0.5,0.5)");
		else
			System.out.println("(1) Point closest to (0.5,0.5) is " + (p1.compareTo(p2)<0 ? p1 : p2));
		p1 = new Point2D(0.2, 0.2);
		p2 = new Point2D(0.8, 0.8);
		if (p1.compareTo(p2) == 0)
			System.out.println("(2) The points are the same distance from (0.5,0.5)");
		else
			System.out.println("(2) Point closest to (0.5,0.5) is " + (p1.compareTo(p2)<0 ? p1 : p2));
	}
}
